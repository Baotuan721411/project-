câu 1 :
def kmp_table(W):
    pos = 2
    cnd = 0
    sz = len(W)
    T = [-1] + [0] * (sz - 1)

    if sz > 1:
        T[1] = 0

    while pos < sz:
        if W[pos - 1] == W[cnd]:
            cnd += 1
            T[pos] = cnd
            pos += 1
        elif cnd > 0:
            cnd = T[cnd]
        else:
            T[pos] = 0
            pos += 1

    return T

def kmp_search(S, W):
    m = 0
    i = 0
    dem = 0
    Sz = len(S)
    Wz = len(W)
    T = kmp_table(W)

    while m + i < Sz:
        if W[i] == S[m + i]:
            i += 1
            if i == Wz:
                dem += 1
                if T[i - 1] > -1:
                    m = m + i - T[i - 1] - 1
                    i = T[i - 1]
                else:
                    m = m + i
                    i = 0
        else:
            if T[i] > -1:
                m = m + i - T[i]
                i = T[i]
            else:
                m += 1
                i = 0

    return dem

def main(filename="input.txt"):
    with open(filename, 'r') as file:
        q = int(file.readline().strip())
        result = []

        for _ in range(q):
            a = file.readline().strip()  # Read the first string
            b = file.readline().strip()  # Read the second string
            ans = 0

            if len(b) == 1:
                ans = sum(1 for char in a if char == b[0])
                if ans == 0:
                    ans = -1
                result.append(ans)
            else:
                ans = kmp_search(a, b)
                if ans == 0:
                    ans = -1
                result.append(ans)

   return result
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
câu 2:
MOD = None 
v1 = [1]
v2 = [1]
x1 = [1, 1]
x2 = [1, 0]

def ans(n):
    global v1, v2, x1, x2

    while n > 0:
        tmpv1_0 = v1[0]
        tmpv2_0 = v2[0]
        tmpx1_0, tmpx1_1 = x1
        tmpx2_0, tmpx2_1 = x2

        if n & 1:  
            v1[0] = (tmpx1_0 * tmpv1_0 + tmpx1_1 * tmpv2_0) % MOD
            v2[0] = (tmpx2_0 * tmpv1_0 + tmpx2_1 * tmpv2_0) % MOD
        x1[0] = (tmpx1_0 * tmpx1_0 + tmpx1_1 * tmpx2_0) % MOD
        x1[1] = (tmpx1_0 * tmpx1_1 + tmpx1_1 * tmpx2_1) % MOD
        x2[0] = (tmpx2_0 * tmpx1_0 + tmpx2_1 * tmpx2_0) % MOD
        x2[1] = (tmpx2_0 * tmpx1_1 + tmpx2_1 * tmpx2_1) % MOD
        n //= 2
    return v1[0]

def MAIN(filename="input.txt"):
    global MOD, v1, v2, x1, x2
    with open(filename, "r") as file:
        N, Q = map(int, file.readline().strip().split())
        MOD = Q  # Set the modulus for the calculations
        results = []
        for _ in range(N):
            v1 = [1]
            v2 = [1]
            x1 = [1, 1]
            x2 = [1, 0]
            A_i = int(file.readline().strip())
            if A_i == 0:
                results.append(0)
            else:
                results.append(ans(A_i - 1))

    return results
-------------------------------------------------------------------------------------------------------------------------------------------
câu 3 : 

